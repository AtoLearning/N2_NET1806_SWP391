{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{toast}from'react-toastify';import{Link}from'react-router-dom';import Button from'@mui/material/Button';import Dialog from'@mui/material/Dialog';import DialogActions from'@mui/material/DialogActions';import DialogContent from'@mui/material/DialogContent';import DialogContentText from'@mui/material/DialogContentText';import DialogTitle from'@mui/material/DialogTitle';import'../styles/dashboard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const URL='https://6666c4dca2f8516ff7a4d335.mockapi.io/staffManagement';const Dashboard=()=>{const[staffs,setStaffs]=useState([]);const getListStaff=async()=>{const res=await axios.get(\"\".concat(URL));if(res.status===200){setStaffs(res.data);}};useEffect(()=>{getListStaff();},[]);const[open,setOpen]=React.useState(false);const[delStaff,setDelStaff]=React.useState();const handleDelete=async id=>{// if (window.confirm(`Are you sure that you want to delete a staff with ID: ${id}`)) {\nconst res=await axios.delete(\"\".concat(URL,\"/\").concat(id));// console.log(res.status);\nif(res.status===200){getListStaff();toast.success(\"Deleted Successfully ~\");}else{toast.error(\"Delete: Error!\");}handleClose();// }\n};const handleClickOpen=id=>{setOpen(true);setDelStaff(id);};const handleClose=()=>{setOpen(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"staff-table\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"btn-add\",children:/*#__PURE__*/_jsx(Link,{to:'/add/',children:/*#__PURE__*/_jsx(\"button\",{className:\"add-staff-btn\",children:\"ADD NEW STAFF\"})})}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Avatar\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Age\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Created Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:staffs&&staffs.map(staff=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:staff.id}),/*#__PURE__*/_jsx(\"td\",{children:staff.name}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"img\",{src:staff.avatar,alt:staff.id})}),/*#__PURE__*/_jsx(\"td\",{children:staff.age}),/*#__PURE__*/_jsx(\"td\",{children:staff.address}),/*#__PURE__*/_jsx(\"td\",{children:new Date(staff.createdAt*1000).toLocaleDateString()}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/update/\".concat(staff.id),children:/*#__PURE__*/_jsx(\"button\",{children:\"Edit\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleClickOpen(staff.id),children:\"Delete\"})]})]},staff.id))})]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,\"aria-labelledby\":\"alert-dialog-title\",\"aria-describedby\":\"alert-dialog-description\",children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"alert-dialog-title\",children:\"Do you want to delete Staff?\"}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(DialogContentText,{id:\"alert-dialog-description\",children:[\"Are you sure that you want to delete a staff with ID: \",delStaff]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"No\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>handleDelete(delStaff),autoFocus:true,children:\"Yes\"})]})]})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","toast","Link","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","jsx","_jsx","jsxs","_jsxs","URL","Dashboard","staffs","setStaffs","getListStaff","res","get","concat","status","data","open","setOpen","delStaff","setDelStaff","handleDelete","id","delete","success","error","handleClose","handleClickOpen","className","children","to","map","staff","name","src","avatar","alt","age","address","Date","createdAt","toLocaleDateString","onClick","onClose","autoFocus"],"sources":["D:/Downloads/commonPractice-shared/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport '../styles/dashboard.css';\n\nconst URL = 'https://6666c4dca2f8516ff7a4d335.mockapi.io/staffManagement';\n\nconst Dashboard = () => {\n\n    const [staffs, setStaffs] = useState([]);\n\n    const getListStaff = async () => {\n        const res = await axios.get(`${URL}`);\n        if (res.status === 200) {\n            setStaffs(res.data);\n        }\n    }\n\n    useEffect(() => {\n        getListStaff();\n    }, []);\n\n    const [open, setOpen] = React.useState(false);\n    const [delStaff, setDelStaff] = React.useState();\n\n    const handleDelete = async (id) => {\n        // if (window.confirm(`Are you sure that you want to delete a staff with ID: ${id}`)) {\n        const res = await axios.delete(`${URL}/${id}`);\n        // console.log(res.status);\n        if (res.status === 200) {\n            getListStaff();\n            toast.success(\"Deleted Successfully ~\");\n        } else {\n            toast.error(\"Delete: Error!\");\n        }\n        handleClose();\n        // }\n    }\n\n    const handleClickOpen = (id) => {\n        setOpen(true);\n        setDelStaff(id);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className=\"staff-table\">\n            <div className=\"btn-add\">\n                <Link to={'/add/'}>\n                    <button className='add-staff-btn'>ADD NEW STAFF</button>\n                </Link>\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Name</th>\n                        <th>Avatar</th>\n                        <th>Age</th>\n                        <th>Address</th>\n                        <th>Created Date</th>\n                        <th>Action</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {staffs && staffs.map((staff) => (\n                        <tr key={staff.id}>\n                            <td>{staff.id}</td>\n                            <td>{staff.name}</td>\n                            <td><img src={staff.avatar} alt={staff.id} /></td>\n                            <td>{staff.age}</td>\n                            <td>{staff.address}</td>\n                            <td>{new Date(staff.createdAt * 1000).toLocaleDateString()}</td>\n                            <td>\n                                <Link to={`/update/${staff.id}`}><button>Edit</button></Link>\n                                <button onClick={() => handleClickOpen(staff.id)}>Delete</button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"Do you want to delete Staff?\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Are you sure that you want to delete a staff with ID: {delStaff}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>No</Button>\n                    <Button onClick={() => handleDelete(delStaff)} autoFocus>\n                        Yes\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n\n    );\n};\n\nexport default Dashboard;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,KAAK,KAAQ,gBAAgB,CACtC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,aAAa,KAAM,6BAA6B,CACvD,MAAO,CAAAC,iBAAiB,KAAM,iCAAiC,CAC/D,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEjC,KAAM,CAAAC,GAAG,CAAG,6DAA6D,CAEzE,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAEpB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAExC,KAAM,CAAAmB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,IAAAC,MAAA,CAAIP,GAAG,CAAE,CAAC,CACrC,GAAIK,GAAG,CAACG,MAAM,GAAK,GAAG,CAAE,CACpBL,SAAS,CAACE,GAAG,CAACI,IAAI,CAAC,CACvB,CACJ,CAAC,CAEDvB,SAAS,CAAC,IAAM,CACZkB,YAAY,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAACM,IAAI,CAAEC,OAAO,CAAC,CAAG3B,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAAC2B,QAAQ,CAAEC,WAAW,CAAC,CAAG7B,KAAK,CAACC,QAAQ,CAAC,CAAC,CAEhD,KAAM,CAAA6B,YAAY,CAAG,KAAO,CAAAC,EAAE,EAAK,CAC/B;AACA,KAAM,CAAAV,GAAG,CAAG,KAAM,CAAAlB,KAAK,CAAC6B,MAAM,IAAAT,MAAA,CAAIP,GAAG,MAAAO,MAAA,CAAIQ,EAAE,CAAE,CAAC,CAC9C;AACA,GAAIV,GAAG,CAACG,MAAM,GAAK,GAAG,CAAE,CACpBJ,YAAY,CAAC,CAAC,CACdhB,KAAK,CAAC6B,OAAO,CAAC,wBAAwB,CAAC,CAC3C,CAAC,IAAM,CACH7B,KAAK,CAAC8B,KAAK,CAAC,gBAAgB,CAAC,CACjC,CACAC,WAAW,CAAC,CAAC,CACb;AACJ,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIL,EAAE,EAAK,CAC5BJ,OAAO,CAAC,IAAI,CAAC,CACbE,WAAW,CAACE,EAAE,CAAC,CACnB,CAAC,CAED,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACtBR,OAAO,CAAC,KAAK,CAAC,CAClB,CAAC,CAED,mBACIZ,KAAA,QAAKsB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBzB,IAAA,QAAKwB,SAAS,CAAC,SAAS,CAAAC,QAAA,cACpBzB,IAAA,CAACR,IAAI,EAACkC,EAAE,CAAE,OAAQ,CAAAD,QAAA,cACdzB,IAAA,WAAQwB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAC,eAAa,CAAQ,CAAC,CACtD,CAAC,CACN,CAAC,cACNvB,KAAA,UAAAuB,QAAA,eACIzB,IAAA,UAAAyB,QAAA,cACIvB,KAAA,OAAAuB,QAAA,eACIzB,IAAA,OAAAyB,QAAA,CAAI,IAAE,CAAI,CAAC,cACXzB,IAAA,OAAAyB,QAAA,CAAI,MAAI,CAAI,CAAC,cACbzB,IAAA,OAAAyB,QAAA,CAAI,QAAM,CAAI,CAAC,cACfzB,IAAA,OAAAyB,QAAA,CAAI,KAAG,CAAI,CAAC,cACZzB,IAAA,OAAAyB,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBzB,IAAA,OAAAyB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBzB,IAAA,OAAAyB,QAAA,CAAI,QAAM,CAAI,CAAC,EACf,CAAC,CACF,CAAC,cACRzB,IAAA,UAAAyB,QAAA,CACKpB,MAAM,EAAIA,MAAM,CAACsB,GAAG,CAAEC,KAAK,eACxB1B,KAAA,OAAAuB,QAAA,eACIzB,IAAA,OAAAyB,QAAA,CAAKG,KAAK,CAACV,EAAE,CAAK,CAAC,cACnBlB,IAAA,OAAAyB,QAAA,CAAKG,KAAK,CAACC,IAAI,CAAK,CAAC,cACrB7B,IAAA,OAAAyB,QAAA,cAAIzB,IAAA,QAAK8B,GAAG,CAAEF,KAAK,CAACG,MAAO,CAACC,GAAG,CAAEJ,KAAK,CAACV,EAAG,CAAE,CAAC,CAAI,CAAC,cAClDlB,IAAA,OAAAyB,QAAA,CAAKG,KAAK,CAACK,GAAG,CAAK,CAAC,cACpBjC,IAAA,OAAAyB,QAAA,CAAKG,KAAK,CAACM,OAAO,CAAK,CAAC,cACxBlC,IAAA,OAAAyB,QAAA,CAAK,GAAI,CAAAU,IAAI,CAACP,KAAK,CAACQ,SAAS,CAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAAK,CAAC,cAChEnC,KAAA,OAAAuB,QAAA,eACIzB,IAAA,CAACR,IAAI,EAACkC,EAAE,YAAAhB,MAAA,CAAakB,KAAK,CAACV,EAAE,CAAG,CAAAO,QAAA,cAACzB,IAAA,WAAAyB,QAAA,CAAQ,MAAI,CAAQ,CAAC,CAAM,CAAC,cAC7DzB,IAAA,WAAQsC,OAAO,CAAEA,CAAA,GAAMf,eAAe,CAACK,KAAK,CAACV,EAAE,CAAE,CAAAO,QAAA,CAAC,QAAM,CAAQ,CAAC,EACjE,CAAC,GAVAG,KAAK,CAACV,EAWX,CACP,CAAC,CACC,CAAC,EACL,CAAC,cACRhB,KAAA,CAACR,MAAM,EACHmB,IAAI,CAAEA,IAAK,CACX0B,OAAO,CAAEjB,WAAY,CACrB,kBAAgB,oBAAoB,CACpC,mBAAiB,0BAA0B,CAAAG,QAAA,eAE3CzB,IAAA,CAACF,WAAW,EAACoB,EAAE,CAAC,oBAAoB,CAAAO,QAAA,CAC/B,8BAA8B,CACtB,CAAC,cACdzB,IAAA,CAACJ,aAAa,EAAA6B,QAAA,cACVvB,KAAA,CAACL,iBAAiB,EAACqB,EAAE,CAAC,0BAA0B,CAAAO,QAAA,EAAC,wDACS,CAACV,QAAQ,EAChD,CAAC,CACT,CAAC,cAChBb,KAAA,CAACP,aAAa,EAAA8B,QAAA,eACVzB,IAAA,CAACP,MAAM,EAAC6C,OAAO,CAAEhB,WAAY,CAAAG,QAAA,CAAC,IAAE,CAAQ,CAAC,cACzCzB,IAAA,CAACP,MAAM,EAAC6C,OAAO,CAAEA,CAAA,GAAMrB,YAAY,CAACF,QAAQ,CAAE,CAACyB,SAAS,MAAAf,QAAA,CAAC,KAEzD,CAAQ,CAAC,EACE,CAAC,EACZ,CAAC,EACR,CAAC,CAGd,CAAC,CAED,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}